{"version":3,"sources":["Components/Profile/MyPosts/MyPosts.module.scss","Components/Profile/ProfileInfo/ProfileInfo.module.scss","Components/Header/Header.module.scss","Components/Profile/MyPosts/Post/Post.module.scss","Components/Profile/Profile.module.scss","App.module.scss","Components/Header/Header.jsx","Components/Navbar/Navbar.jsx","Components/Profile/MyPosts/Post/Post.jsx","Redux/state.js","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Messages/DialogItem/DialogItem.jsx","Components/Messages/MessagesDiv/MessagesDiv.jsx","Components/Messages/Messages.jsx","App.js","reportWebVitals.js","index.js","Components/Navbar/Navbar.module.scss","Components/Messages/Messages.module.scss"],"names":["module","exports","Header","className","style","mainHeader","src","alt","Navbar","mainNavbar","to","navList","activeClassName","active","Post","props","post","message","likeCount","ADD_POST","UPDATE_NEW_POST_TEXT","SEND_MESSAGE","UPDATE_NEW_MESSAGE","store","_state","profilePage","postData","id","newPostText","messagesPage","messagesData","newMessageText","dialogsData","name","sidebar","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","action","type","newPost","push","newText","newMessage","newMessageDialogs","window","MyPosts","postElements","map","newPostElement","React","createRef","myPosts","postWriting","onChange","text","updateNewPostTextActionCreator","current","value","ref","onClick","posts","ProfileInfo","upperContent","feed","descriptionBlock","Profile","mainContent","DialogItem","dialog","MessagesDiv","Messages","dialogElements","state","messagesElements","dialogs","dialogsItem","messages","sendMessage","e","textFromInput","target","updateMessageActionCreator","placeholder","App","appWrapper","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderEntireTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.b3c57c33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1RNUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3T5nu\",\"feed\":\"ProfileInfo_feed__1ZUUT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"Header_mainHeader__3zYNt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__QxfCZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Profile_mainContent__2UzGK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__2krD3\"};","import React from 'react';\nimport style from './Header.module.scss';\n\nconst Header = () => {\n\n   return (\n      <div className={style.mainHeader}>\n         <div>\n            <img src=\"https://www.clipartmax.com/png/middle/154-1541905_related-barbecue-meat-clipart-png-bbq-logos-free-png.png\" alt=\"/\" />\n         </div>\n      </div>\n   );\n}\n\n\nexport default Header;\n","import React from \"react\";\nimport style from \"./Navbar.module.scss\";\nimport { NavLink, Route } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className={style.mainNavbar}>\n      <ul>\n        <li>\n          <NavLink\n            to=\"/Profile\"\n            className={style.navList}\n            activeClassName={style.active}\n          >\n            Profile\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/Dialogs\"\n            className={style.navList}\n            activeClassName={style.active}\n          >\n            Messages\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/News\"\n            className={style.navList}\n            activeClassName={style.active}\n          >\n            News\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/Music\"\n            className={style.navList}\n            activeClassName={style.active}\n          >\n            Music\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/Settings\"\n            className={style.navList}\n            activeClassName={style.active}\n          >\n            Settings\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport style from \"./Post.module.scss\";\n\nconst Post = (props) => {\n  return (\n    <div className={style.post}>\n      <img\n        src=\"https://img.favpng.com/25/7/23/computer-icons-user-profile-avatar-image-png-favpng-LFqDyLRhe3PBXM0sx2LufsGFU.jpg\"\n        alt=\"/\"\n      />\n      {props.message}\n      <div>\n        <span>Like {props.likeCount}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","const ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SEND_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE = \"UPDATE-NEW-MESSAGE\";\r\n\r\n// BLL REDUX\r\nlet store = {\r\n  _state: {\r\n    profilePage: {\r\n      postData: [\r\n        { id: 1, message: \"Hi, how are you?\", likeCount: \"13\" },\r\n        { id: 2, message: \"It's my first post\", likeCount: \"18\" },\r\n        { id: 3, message: \"Hello From America\", likeCount: \"55\" },\r\n      ],\r\n      newPostText: \"What's happening?\",\r\n    },\r\n\r\n    messagesPage: {\r\n      messagesData: [\r\n        { id: 1, message: \"Hi\" },\r\n        { id: 2, message: \"How are you?\" },\r\n        { id: 3, message: \"Hey, come here\" },\r\n      ],\r\n      newMessageText: \"\",\r\n\r\n      dialogsData: [\r\n        { id: 1, name: \"David\" },\r\n        { id: 2, name: \"Nika\" },\r\n        { id: 3, name: \"Kety\" },\r\n        { id: 4, name: \"Jone\" },\r\n        { id: 5, name: \"Mery\" },\r\n        { id: 6, name: \"James\" },\r\n        { id: 7, name: \"Mia\" },\r\n      ],\r\n    },\r\n\r\n    sidebar: {},\r\n  },\r\n  _callSubscriber() {\r\n    console.log(\"state changed\");\r\n  },\r\n\r\n  getState() {\r\n    return this._state;\r\n  },\r\n  subscribe(observer) {\r\n    this._callSubscriber = observer;\r\n  },\r\n\r\n  dispatch(action) {\r\n    // { type: 'ADD-POST' in UI}\r\n    if (action.type === ADD_POST) {\r\n      let newPost = {\r\n        id: 4,\r\n        message: this._state.profilePage.newPostText,\r\n        likeCount: 1,\r\n      };\r\n      this._state.profilePage.postData.push(newPost);\r\n      this._state.profilePage.newPostText = \"\";\r\n      this._callSubscriber(this._state);\r\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n      this._state.profilePage.newPostText = action.newText;\r\n      this._callSubscriber(this._state);\r\n\r\n\r\n    } else if (action.type === SEND_MESSAGE) {\r\n      let newMessage = {\r\n        id: 4,\r\n        message: this._state.messagesPage.newMessageText,\r\n      };\r\n      this._state.messagesPage.messagesData.push(newMessage);\r\n      this._state.messagesPage.newMessageText = \"\";\r\n      this._callSubscriber(this._state); \r\n    } else if (action.type === UPDATE_NEW_MESSAGE) {\r\n      this._state.messagesPage.newMessageText = action.newMessageDialogs;\r\n      this._callSubscriber(this._state);\r\n    }\r\n  },\r\n};\r\n\r\n\r\n// ACTION CREATORS FOR UI use\r\n// Profile\r\nexport const addPostActionCreator = () => ({ type: ADD_POST });\r\nexport const updateNewPostTextActionCreator = (text) => ({\r\n  type: UPDATE_NEW_POST_TEXT,\r\n  newText: text,\r\n});\r\n\r\n//Messages\r\nexport const sendMessageActionCreator = () => ({ type: SEND_MESSAGE });\r\nexport const updateMessageActionCreator = (textFromInput) => ({\r\n  type: UPDATE_NEW_MESSAGE,\r\n  newMessageDialogs: textFromInput,\r\n});\r\n\r\nexport default store;\r\nwindow.store = store;\r\n\r\n// Store - OOP\r\n","import React from \"react\";\nimport style from \"./MyPosts.module.scss\";\nimport Post from \"./Post/Post\";\n\nimport {\n  addPostActionCreator,\n  updateNewPostTextActionCreator,\n} from \"./../../../Redux/state\";\n\nconst MyPosts = (props) => {\n  let postElements = props.postData.map((post) => (\n    <Post message={post.message} likeCount={post.likeCount} />\n  ));\n\n  // catching textarea value with ref\n  let newPostElement = React.createRef();\n\n  let addPost = () => {\n    props.dispatch(addPostActionCreator());\n  };\n\n  let onPostChange = () => {\n    let text = newPostElement.current.value;\n    let action = updateNewPostTextActionCreator(text);\n    props.dispatch(action);\n  };\n\n  return (\n    <div className={style.myPosts}>\n      <h2>My Posts</h2>\n      <div className={style.postWriting}>\n        <div>\n          <textarea\n            onChange={onPostChange}\n            ref={newPostElement}\n            value={props.newPostText}\n          />\n        </div>\n\n        <div>\n          <button onClick={addPost}>Add post</button>\n        </div>\n      </div>\n\n      <div className={style.posts}>{postElements}</div>\n    </div>\n  );\n};\n\nexport default MyPosts;\n","import React from \"react\";\nimport style from \"./ProfileInfo.module.scss\";\n\nconst ProfileInfo = (props) => {\n  return (\n    <div className={style.upperContent}>\n      <div className={style.feed}>\n        <img\n          src=\"https://www.indoindians.com/wp-content/uploads/2020/01/2020-fashion-trends-feature-1280x720.jpg\"\n          alt=\"/\"\n        />\n      </div>\n\n      <div className={style.descriptionBlock}>ava + description</div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport style from \"./Profile.module.scss\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n  return (\n    <div className={style.mainContent}>\n      <ProfileInfo />\n      <MyPosts\n        postData={props.profilePage.postData}\n        newPostText={props.profilePage.newPostText}\n        dispatch={props.dispatch}\n      />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport style from './../Messages.module.scss';\n\n\n\nconst DialogItem = (props) => {\n    return (\n        <div className={style.dialog + ' ' + style.active}>\n            <NavLink to={\"/dialogs/1\" + props.id}>{props.name}</NavLink>\n        </div>\n    );\n}\n\nexport default DialogItem;","import React from \"react\";\nimport style from './../Messages.module.scss';\n\nconst MessagesDiv = (props) => {\n\n    return (\n        <div className={style.dialog}>{props.message}</div>\n\n    );\n}\n\nexport default MessagesDiv;","import React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport style from \"./Messages.module.scss\";\nimport MessagesDiv from \"./MessagesDiv/MessagesDiv\";\nimport {\n  sendMessageActionCreator,\n  updateMessageActionCreator,\n} from \"./../../Redux/state\";\n\nconst Messages = (props) => {\n  let dialogElements = props.state.dialogsData.map((dialog) => (\n    <DialogItem name={dialog.name} id={dialog.id} />\n  ));\n  let messagesElements = props.state.messagesData.map((message) => (\n    <MessagesDiv message={message.message} id={message.id} />\n  ));\n\n  let newMessageDialogs = props.state.newMessageDialogs;\n\n  let onSendMessageClick = () => {\n    props.dispatch(sendMessageActionCreator());\n  };\n\n  let onChangeMessage = (e) => {\n    let textFromInput = e.target.value;\n    props.dispatch(updateMessageActionCreator(textFromInput));\n  };\n\n  return (\n    <div className={style.dialogs}>\n      <div className={style.dialogsItem}>{dialogElements}</div>\n      <div className={style.messages}>{messagesElements}</div>\n\n      <div className={style.sendMessage}>\n        <div>\n          <textarea\n            onChange={onChangeMessage}\n            placeholder=\"Enter Your message\"\n            value={newMessageDialogs}\n          ></textarea>\n        </div>\n        <div>\n          <button onClick={onSendMessageClick}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Messages;\n","import Header from \"./Components/Header/Header\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Profile from \"./Components/Profile/Profile\";\nimport Messages from \"./Components/Messages/Messages\";\nimport style from \"./App.module.scss\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\n\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <div className={style.appWrapper}>\n        <Header />\n        <Navbar />\n        <Route\n          path=\"/Profile\"\n          render={() => (\n            <Profile\n              profilePage={props.state.profilePage}\n              dispatch={props.dispatch}\n            />\n          )}\n        />\n        <Route\n          path=\"/Dialogs\"\n          render={() => (\n            <Messages\n              dispatch={props.dispatch}\n              state={props.state.messagesPage}\n            />\n          )}\n        />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./Redux/state\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nlet rerenderEntireTree = (state) => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <React.StrictMode>\n        <App state={state} dispatch={store.dispatch.bind(store)} store={store} />\n      </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n};\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(rerenderEntireTree);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainNavbar\":\"Navbar_mainNavbar__3nQZC\",\"navList\":\"Navbar_navList__pQvhD\",\"active\":\"Navbar_active__2Rvz0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messages_dialogs__2ssMb\",\"dialogsItem\":\"Messages_dialogsItem__wU5TT\",\"active\":\"Messages_active__1cvjI\",\"dialog\":\"Messages_dialog__4z1LL\",\"messages\":\"Messages_messages__1aq5O\",\"sendMessage\":\"Messages_sendMessage__Zk97x\"};"],"sourceRoot":""}